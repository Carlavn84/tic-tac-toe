{"ast":null,"code":"import _slicedToArray from \"/home/carlavo/Projects/fontoxml/fontoxml-platform/training/learning-react-exercises/001-tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/carlavo/Projects/fontoxml/fontoxml-platform/training/learning-react-exercises/001-tic-tac-toe/src/components/Cell.js\";\nimport React, { useCallback, useState } from 'react';\nimport { CELL_VALUE_EMPTY } from 'enums/CELL_VALUE';\nimport './Cell.css';\n\nfunction Cell({\n  cellId,\n  cellValueForCurrentPlayer,\n  isDisabled,\n  onCellClick,\n  rowId,\n  value\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isHovered = _useState2[0],\n        setIsHovered = _useState2[1];\n\n  const handleMouseOut = () => setIsHovered(false);\n\n  const handleMouseOver = () => setIsHovered(true);\n\n  const handleClick = useCallback(() => {\n    setIsHovered(false);\n    onCellClick(rowId, cellId);\n  }, [cellId, onCellClick, rowId]);\n  return React.createElement(\"div\", {\n    className: isHovered ? 'Cell Cell-isHovered' : 'Cell',\n    onMouseOut: isDisabled || value !== CELL_VALUE_EMPTY ? null : handleMouseOut,\n    onMouseOver: isDisabled || value !== CELL_VALUE_EMPTY ? null : handleMouseOver,\n    onClick: isDisabled || value ? null : handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, isHovered ? cellValueForCurrentPlayer : value);\n}\n\nexport default Cell;","map":{"version":3,"sources":["/home/carlavo/Projects/fontoxml/fontoxml-platform/training/learning-react-exercises/001-tic-tac-toe/src/components/Cell.js"],"names":["React","useCallback","useState","CELL_VALUE_EMPTY","Cell","cellId","cellValueForCurrentPlayer","isDisabled","onCellClick","rowId","value","isHovered","setIsHovered","handleMouseOut","handleMouseOver","handleClick"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,YAAP;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,yBAAV;AAAqCC,EAAAA,UAArC;AAAiDC,EAAAA,WAAjD;AAA8DC,EAAAA,KAA9D;AAAqEC,EAAAA;AAArE,CAAd,EAA4F;AAAA,oBACzDR,QAAQ,CAAC,KAAD,CADiD;AAAA;AAAA,QACpFS,SADoF;AAAA,QACzEC,YADyE;;AAG3F,QAAMC,cAAc,GAAG,MAAMD,YAAY,CAAC,KAAD,CAAzC;;AACA,QAAME,eAAe,GAAG,MAAMF,YAAY,CAAC,IAAD,CAA1C;;AAEA,QAAMG,WAAW,GAAGd,WAAW,CAAC,MAAM;AACrCW,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAJ,IAAAA,WAAW,CAACC,KAAD,EAAQJ,MAAR,CAAX;AACA,GAJ8B,EAI5B,CAACA,MAAD,EAASG,WAAT,EAAsBC,KAAtB,CAJ4B,CAA/B;AAMA,SACC;AACC,IAAA,SAAS,EAAEE,SAAS,GAAG,qBAAH,GAA2B,MADhD;AAEC,IAAA,UAAU,EAAEJ,UAAU,IAAIG,KAAK,KAAKP,gBAAxB,GAA2C,IAA3C,GAAkDU,cAF/D;AAGC,IAAA,WAAW,EAAEN,UAAU,IAAIG,KAAK,KAAKP,gBAAxB,GAA2C,IAA3C,GAAkDW,eAHhE;AAIC,IAAA,OAAO,EAAEP,UAAU,IAAIG,KAAd,GAAsB,IAAtB,GAA6BK,WAJvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMEJ,SAAS,GAAGL,yBAAH,GAA+BI,KAN1C,CADD;AAUA;;AAED,eAAeN,IAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { CELL_VALUE_EMPTY } from 'enums/CELL_VALUE';\n\nimport './Cell.css';\n\nfunction Cell({ cellId, cellValueForCurrentPlayer, isDisabled, onCellClick, rowId, value }) {\n\tconst [isHovered, setIsHovered] = useState(false);\n\n\tconst handleMouseOut = () => setIsHovered(false);\n\tconst handleMouseOver = () => setIsHovered(true);\n\n\tconst handleClick = useCallback(() => {\n\t\tsetIsHovered(false);\n\n\t\tonCellClick(rowId, cellId);\n\t}, [cellId, onCellClick, rowId]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={isHovered ? 'Cell Cell-isHovered' : 'Cell'}\n\t\t\tonMouseOut={isDisabled || value !== CELL_VALUE_EMPTY ? null : handleMouseOut}\n\t\t\tonMouseOver={isDisabled || value !== CELL_VALUE_EMPTY ? null : handleMouseOver}\n\t\t\tonClick={isDisabled || value ? null : handleClick}\n\t\t>\n\t\t\t{isHovered ? cellValueForCurrentPlayer : value}\n\t\t</div>\n\t);\n}\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}