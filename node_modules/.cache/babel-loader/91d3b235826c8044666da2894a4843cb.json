{"ast":null,"code":"import { CELL_VALUE_EMPTY } from '../enums/CELL_VALUE.js';\n\nfunction checkWinner(board) {\n  // if 3 cells have the same content that !== CELL_VALUE_EMPTY, we have a winner\n  // check each row\n  const winnerOnRow1 = board[0][0] !== CELL_VALUE_EMPTY && board[0][0] === board[0][1] && board[0][1] === board[0][2];\n\n  if (winnerOnRow1) {\n    return true;\n  }\n\n  const winnerOnRow2 = board[1][0] !== CELL_VALUE_EMPTY && board[1][0] === board[1][1] && board[1][1] === board[1][2];\n\n  if (winnerOnRow2) {\n    return true;\n  }\n\n  const winnerOnRow3 = board[2][0] !== CELL_VALUE_EMPTY && board[2][0] === board[2][1] && board[2][1] === board[2][2];\n\n  if (winnerOnRow3) {\n    return true;\n  } // check each column\n\n\n  const winnerOnColumn1 = board[0][0] !== CELL_VALUE_EMPTY && board[0][0] === board[1][0] && board[1][0] === board[2][0];\n\n  if (winnerOnColumn1) {\n    return true;\n  }\n\n  const winnerOnColumn2 = board[0][1] !== CELL_VALUE_EMPTY && board[0][1] === board[1][1] && board[1][1] === board[2][1];\n\n  if (winnerOnColumn2) {\n    return true;\n  }\n\n  const winnerOnColumn3 = board[0][2] !== CELL_VALUE_EMPTY && board[0][2] === board[1][2] && board[1][2] === board[2][2];\n\n  if (winnerOnColumn3) {\n    return true;\n  } // check each diagonal\n\n\n  const winnerOnDiagonal1 = board[0][0] !== CELL_VALUE_EMPTY && board[0][0] === board[1][1] && board[1][1] === board[2][2];\n\n  if (winnerOnDiagonal1) {\n    return true;\n  }\n\n  const winnerOnDiagonal2 = board[2][0] !== CELL_VALUE_EMPTY && board[2][0] === board[1][1] && board[1][1] === board[0][2];\n\n  if (winnerOnDiagonal2) {\n    return true;\n  } // (no need to determine who won here, the rest of the App already knows)\n\n\n  return false;\n}\n\nexport default checkWinner;","map":{"version":3,"sources":["/home/carlavo/Projects/fontoxml/fontoxml-platform/training/learning-react-exercises/001-tic-tac-toe/src/utils/checkWinner.js"],"names":["CELL_VALUE_EMPTY","checkWinner","board","winnerOnRow1","winnerOnRow2","winnerOnRow3","winnerOnColumn1","winnerOnColumn2","winnerOnColumn3","winnerOnDiagonal1","winnerOnDiagonal2"],"mappings":"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","sourcesContent":["import { CELL_VALUE_EMPTY } from '../enums/CELL_VALUE.js';\n\nfunction checkWinner(board) {\n\t// if 3 cells have the same content that !== CELL_VALUE_EMPTY, we have a winner\n\n\t// check each row\n\tconst winnerOnRow1 =\n\t\tboard[0][0] !== CELL_VALUE_EMPTY &&\n\t\tboard[0][0] === board[0][1] &&\n\t\tboard[0][1] === board[0][2];\n\tif (winnerOnRow1) {\n\t\treturn true;\n\t}\n\tconst winnerOnRow2 =\n\t\tboard[1][0] !== CELL_VALUE_EMPTY &&\n\t\tboard[1][0] === board[1][1] &&\n\t\tboard[1][1] === board[1][2];\n\tif (winnerOnRow2) {\n\t\treturn true;\n\t}\n\tconst winnerOnRow3 =\n\t\tboard[2][0] !== CELL_VALUE_EMPTY &&\n\t\tboard[2][0] === board[2][1] &&\n\t\tboard[2][1] === board[2][2];\n\tif (winnerOnRow3) {\n\t\treturn true;\n\t}\n\n\t// check each column\n\tconst winnerOnColumn1 =\n\t\tboard[0][0] !== CELL_VALUE_EMPTY &&\n\t\tboard[0][0] === board[1][0] &&\n\t\tboard[1][0] === board[2][0];\n\tif (winnerOnColumn1) {\n\t\treturn true;\n\t}\n\tconst winnerOnColumn2 =\n\t\tboard[0][1] !== CELL_VALUE_EMPTY &&\n\t\tboard[0][1] === board[1][1] &&\n\t\tboard[1][1] === board[2][1];\n\tif (winnerOnColumn2) {\n\t\treturn true;\n\t}\n\tconst winnerOnColumn3 =\n\t\tboard[0][2] !== CELL_VALUE_EMPTY &&\n\t\tboard[0][2] === board[1][2] &&\n\t\tboard[1][2] === board[2][2];\n\tif (winnerOnColumn3) {\n\t\treturn true;\n\t}\n\n\t// check each diagonal\n\tconst winnerOnDiagonal1 =\n\t\tboard[0][0] !== CELL_VALUE_EMPTY &&\n\t\tboard[0][0] === board[1][1] &&\n\t\tboard[1][1] === board[2][2];\n\tif (winnerOnDiagonal1) {\n\t\treturn true;\n\t}\n\tconst winnerOnDiagonal2 =\n\t\tboard[2][0] !== CELL_VALUE_EMPTY &&\n\t\tboard[2][0] === board[1][1] &&\n\t\tboard[1][1] === board[0][2];\n\tif (winnerOnDiagonal2) {\n\t\treturn true;\n\t}\n\t// (no need to determine who won here, the rest of the App already knows)\n\treturn false;\n}\n\nexport default checkWinner;\n"]},"metadata":{},"sourceType":"module"}