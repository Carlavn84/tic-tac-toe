{"ast":null,"code":"import _defineProperty from \"/home/carlavo/Projects/fontoxml/fontoxml-platform/training/learning-react-exercises/001-tic-tac-toe/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/carlavo/Projects/fontoxml/fontoxml-platform/training/learning-react-exercises/001-tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/carlavo/Projects/fontoxml/fontoxml-platform/training/learning-react-exercises/001-tic-tac-toe/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useState } from 'react';\nimport Board from './components/Board.js';\nimport Controls from './components/Controls.js';\nimport Header from './components/Header.js';\nimport StatusMessage from './components/StatusMessage.js';\nimport { PLAYER_1, PLAYER_2 } from './enums/PLAYER.js';\nimport { PHASE_DRAWN, PHASE_OVER, PHASE_RUNNING } from './enums/PHASE.js';\nimport cellValueByPlayer from './mappings/cellValueByPlayer.js';\nimport checkDraw from './utils/checkDraw.js';\nimport checkWinner from './utils/checkWinner.js';\nimport updateBoard from './utils/updateBoard.js';\nimport initialGameState from './initialGameState.js';\nimport './App.css';\n\nfunction App() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        playerName1 = _useState2[0],\n        setPlayerName1 = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        playerName2 = _useState4[0],\n        setPlayerName2 = _useState4[1];\n\n  const _useState5 = useState(initialGameState),\n        _useState6 = _slicedToArray(_useState5, 2),\n        gameState = _useState6[0],\n        setGameState = _useState6[1];\n\n  const handlePlayerName1Change = event => setPlayerName1(event.target.value.trim());\n\n  const handlePlayerName2Change = event => setPlayerName2(event.target.value.trim());\n\n  const handleStartButtonClick = useCallback(() => setGameState(_objectSpread({}, initialGameState, {\n    currentPlayer: PLAYER_1,\n    phase: PHASE_RUNNING\n  })), []);\n  const handleCellClick = useCallback((rowId, cellId) => setGameState(gameState => {\n    const newGameState = {\n      board: updateBoard(gameState, rowId, cellId),\n      currentPlayer: gameState.currentPlayer,\n      phase: gameState.phase\n    };\n\n    if (checkWinner(newGameState.board)) {\n      newGameState.phase = PHASE_OVER;\n    } else if (checkDraw(newGameState.board)) {\n      newGameState.phase = PHASE_DRAWN;\n    } else {\n      newGameState.currentPlayer = gameState.currentPlayer === PLAYER_1 ? PLAYER_2 : PLAYER_1;\n    }\n\n    return newGameState;\n  }), []);\n  let startButtonLabel = 'Start game';\n\n  if (gameState.phase === PHASE_RUNNING) {\n    startButtonLabel = 'Game runningâ€¦';\n  } else if (gameState.phase === PHASE_DRAWN || gameState.phase === PHASE_OVER) {\n    startButtonLabel = 'Start new game';\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"AppName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Tic-Tac-Toe\"), React.createElement(Controls, {\n    onStartButtonClick: handleStartButtonClick,\n    onPlayerName1Change: handlePlayerName1Change,\n    onPlayerName2Change: handlePlayerName2Change,\n    phase: gameState.phase,\n    playerName1: playerName1,\n    playerName2: playerName2,\n    startButtonLabel: startButtonLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(StatusMessage, {\n    currentPlayer: gameState.currentPlayer,\n    phase: gameState.phase,\n    playerName1: playerName1,\n    playerName2: playerName2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Board, {\n    board: gameState.board,\n    cellValueForCurrentPlayer: cellValueByPlayer[gameState.currentPlayer],\n    onCellClick: handleCellClick,\n    isDisabled: gameState.phase !== PHASE_RUNNING,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/carlavo/Projects/fontoxml/fontoxml-platform/training/learning-react-exercises/001-tic-tac-toe/src/App.js"],"names":["React","useCallback","useState","Board","Controls","Header","StatusMessage","PLAYER_1","PLAYER_2","PHASE_DRAWN","PHASE_OVER","PHASE_RUNNING","cellValueByPlayer","checkDraw","checkWinner","updateBoard","initialGameState","App","playerName1","setPlayerName1","playerName2","setPlayerName2","gameState","setGameState","handlePlayerName1Change","event","target","value","trim","handlePlayerName2Change","handleStartButtonClick","currentPlayer","phase","handleCellClick","rowId","cellId","newGameState","board","startButtonLabel"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport Board from './components/Board.js';\nimport Controls from './components/Controls.js';\nimport Header from './components/Header.js';\nimport StatusMessage from './components/StatusMessage.js';\n\nimport { PLAYER_1, PLAYER_2 } from './enums/PLAYER.js';\nimport { PHASE_DRAWN, PHASE_OVER, PHASE_RUNNING } from './enums/PHASE.js';\n\nimport cellValueByPlayer from './mappings/cellValueByPlayer.js';\n\nimport checkDraw from './utils/checkDraw.js';\nimport checkWinner from './utils/checkWinner.js';\nimport updateBoard from './utils/updateBoard.js';\n\nimport initialGameState from './initialGameState.js';\n\nimport './App.css';\n\nfunction App() {\n\tconst [playerName1, setPlayerName1] = useState('');\n\tconst [playerName2, setPlayerName2] = useState('');\n\tconst [gameState, setGameState] = useState(initialGameState);\n\n\tconst handlePlayerName1Change = event => setPlayerName1(event.target.value.trim());\n\tconst handlePlayerName2Change = event => setPlayerName2(event.target.value.trim());\n\n\tconst handleStartButtonClick = useCallback(\n\t\t() => setGameState({ ...initialGameState, currentPlayer: PLAYER_1, phase: PHASE_RUNNING }),\n\t\t[]\n\t);\n\n\tconst handleCellClick = useCallback(\n\t\t(rowId, cellId) =>\n\t\t\tsetGameState(gameState => {\n\t\t\t\tconst newGameState = {\n\t\t\t\t\tboard: updateBoard(gameState, rowId, cellId),\n\t\t\t\t\tcurrentPlayer: gameState.currentPlayer,\n\t\t\t\t\tphase: gameState.phase\n\t\t\t\t};\n\n\t\t\t\tif (checkWinner(newGameState.board)) {\n\t\t\t\t\tnewGameState.phase = PHASE_OVER;\n\t\t\t\t} else if (checkDraw(newGameState.board)) {\n\t\t\t\t\tnewGameState.phase = PHASE_DRAWN;\n\t\t\t\t} else {\n\t\t\t\t\tnewGameState.currentPlayer =\n\t\t\t\t\t\tgameState.currentPlayer === PLAYER_1 ? PLAYER_2 : PLAYER_1;\n\t\t\t\t}\n\n\t\t\t\treturn newGameState;\n\t\t\t}),\n\t\t[]\n\t);\n\n\tlet startButtonLabel = 'Start game';\n\tif (gameState.phase === PHASE_RUNNING) {\n\t\tstartButtonLabel = 'Game runningâ€¦';\n\t} else if (gameState.phase === PHASE_DRAWN || gameState.phase === PHASE_OVER) {\n\t\tstartButtonLabel = 'Start new game';\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header>\n\t\t\t\t<h1 className=\"AppName\">Tic-Tac-Toe</h1>\n\n\t\t\t\t<Controls\n\t\t\t\t\tonStartButtonClick={handleStartButtonClick}\n\t\t\t\t\tonPlayerName1Change={handlePlayerName1Change}\n\t\t\t\t\tonPlayerName2Change={handlePlayerName2Change}\n\t\t\t\t\tphase={gameState.phase}\n\t\t\t\t\tplayerName1={playerName1}\n\t\t\t\t\tplayerName2={playerName2}\n\t\t\t\t\tstartButtonLabel={startButtonLabel}\n\t\t\t\t/>\n\n\t\t\t\t<StatusMessage\n\t\t\t\t\tcurrentPlayer={gameState.currentPlayer}\n\t\t\t\t\tphase={gameState.phase}\n\t\t\t\t\tplayerName1={playerName1}\n\t\t\t\t\tplayerName2={playerName2}\n\t\t\t\t/>\n\t\t\t</Header>\n\n\t\t\t<Board\n\t\t\t\tboard={gameState.board}\n\t\t\t\tcellValueForCurrentPlayer={cellValueByPlayer[gameState.currentPlayer]}\n\t\t\t\tonCellClick={handleCellClick}\n\t\t\t\tisDisabled={gameState.phase !== PHASE_RUNNING}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}