{"ast":null,"code":"var _jsxFileName = \"/home/carlavo/Projects/fontoxml/fontoxml-platform/training/learning-react-exercises/001-tic-tac-toe/src/components/StatusMessage.js\";\nimport React from 'react';\nimport { PHASE_UNKNOWN, PHASE_RUNNING, PHASE_DRAWN, PHASE_OVER } from '../enums/PHASE.js';\nimport { PLAYER_1, PLAYER_2 } from '../enums/PLAYER.js';\nimport cellValueByPlayer from '../mappings/cellValueByPlayer.js';\nimport './StatusMessage.css';\nconst createStatusMessageByPhase = {\n  [PHASE_UNKNOWN]: () => 'Please fill out the player names before starting the game.',\n  [PHASE_RUNNING]: (currentPlayer, playerName1, playerName2) => {\n    const currentPlayerName = currentPlayer === PLAYER_1 ? playerName1 : playerName2;\n    const currentPlayerCellValue = cellValueByPlayer[currentPlayer];\n    return \"Game running\\u2026 it's \".concat(currentPlayerName, \"'s (\").concat(currentPlayerCellValue, \") turn to play.\");\n  },\n  [PHASE_DRAWN]: (currentPlayer, playerName1, playerName2) => {\n    const currentPlayerName = currentPlayer === PLAYER_1 ? playerName1 : playerName2;\n    const currentPlayerCellValue = cellValueByPlayer[currentPlayer];\n    const otherPlayerName = currentPlayer === PLAYER_1 ? playerName2 : playerName1;\n    const otherPlayerCellValue = cellValueByPlayer[currentPlayer === PLAYER_1 ? PLAYER_2 : PLAYER_1];\n    return \"Game drawn. Nice save \".concat(currentPlayerName, \" (\").concat(currentPlayerCellValue, \"), nice try \").concat(otherPlayerName, \" (\").concat(otherPlayerCellValue, \").\");\n  },\n  [PHASE_OVER]: (currentPlayer, playerName1, playerName2) => {\n    const currentPlayerName = currentPlayer === PLAYER_1 ? playerName1 : playerName2;\n    const currentPlayerCellValue = cellValueByPlayer[currentPlayer];\n    const otherPlayerName = currentPlayer === PLAYER_1 ? playerName2 : playerName1;\n    const otherPlayerCellValue = cellValueByPlayer[currentPlayer === PLAYER_1 ? PLAYER_2 : PLAYER_1];\n    return \"Game over. Congratulations \".concat(currentPlayerName, \" (\").concat(currentPlayerCellValue, \"), nice try \").concat(otherPlayerName, \" (\").concat(otherPlayerCellValue, \").\");\n  }\n};\nconst classNameByPhase = {\n  [PHASE_UNKNOWN]: 'StatusMessage StatusMessage-info',\n  [PHASE_RUNNING]: 'StatusMessage StatusMessage-info',\n  [PHASE_DRAWN]: 'StatusMessage StatusMessage-attention',\n  [PHASE_OVER]: 'StatusMessage StatusMessage-attention'\n};\n\nfunction StatusMessage({\n  currentPlayer,\n  phase,\n  playerName1,\n  playerName2\n}) {\n  const createStatusMessage = createStatusMessageByPhase[phase];\n  return React.createElement(\"div\", {\n    className: classNameByPhase[phase],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, createStatusMessage(currentPlayer, playerName1, playerName2));\n}\n\nexport default StatusMessage;","map":{"version":3,"sources":["/home/carlavo/Projects/fontoxml/fontoxml-platform/training/learning-react-exercises/001-tic-tac-toe/src/components/StatusMessage.js"],"names":["React","PHASE_UNKNOWN","PHASE_RUNNING","PHASE_DRAWN","PHASE_OVER","PLAYER_1","PLAYER_2","cellValueByPlayer","createStatusMessageByPhase","currentPlayer","playerName1","playerName2","currentPlayerName","currentPlayerCellValue","otherPlayerName","otherPlayerCellValue","classNameByPhase","StatusMessage","phase","createStatusMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,WAAvC,EAAoDC,UAApD,QAAsE,mBAAtE;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,OAAO,qBAAP;AAEA,MAAMC,0BAA0B,GAAG;AAClC,GAACP,aAAD,GAAiB,MAAM,4DADW;AAElC,GAACC,aAAD,GAAiB,CAACO,aAAD,EAAgBC,WAAhB,EAA6BC,WAA7B,KAA6C;AAC7D,UAAMC,iBAAiB,GAAGH,aAAa,KAAKJ,QAAlB,GAA6BK,WAA7B,GAA2CC,WAArE;AACA,UAAME,sBAAsB,GAAGN,iBAAiB,CAACE,aAAD,CAAhD;AACA,6CAA6BG,iBAA7B,iBAAqDC,sBAArD;AACA,GANiC;AAOlC,GAACV,WAAD,GAAe,CAACM,aAAD,EAAgBC,WAAhB,EAA6BC,WAA7B,KAA6C;AAC3D,UAAMC,iBAAiB,GAAGH,aAAa,KAAKJ,QAAlB,GAA6BK,WAA7B,GAA2CC,WAArE;AACA,UAAME,sBAAsB,GAAGN,iBAAiB,CAACE,aAAD,CAAhD;AACA,UAAMK,eAAe,GAAGL,aAAa,KAAKJ,QAAlB,GAA6BM,WAA7B,GAA2CD,WAAnE;AACA,UAAMK,oBAAoB,GACzBR,iBAAiB,CAACE,aAAa,KAAKJ,QAAlB,GAA6BC,QAA7B,GAAwCD,QAAzC,CADlB;AAEA,2CAAgCO,iBAAhC,eAAsDC,sBAAtD,yBAA2FC,eAA3F,eAA+GC,oBAA/G;AACA,GAdiC;AAelC,GAACX,UAAD,GAAc,CAACK,aAAD,EAAgBC,WAAhB,EAA6BC,WAA7B,KAA6C;AAC1D,UAAMC,iBAAiB,GAAGH,aAAa,KAAKJ,QAAlB,GAA6BK,WAA7B,GAA2CC,WAArE;AACA,UAAME,sBAAsB,GAAGN,iBAAiB,CAACE,aAAD,CAAhD;AACA,UAAMK,eAAe,GAAGL,aAAa,KAAKJ,QAAlB,GAA6BM,WAA7B,GAA2CD,WAAnE;AACA,UAAMK,oBAAoB,GACzBR,iBAAiB,CAACE,aAAa,KAAKJ,QAAlB,GAA6BC,QAA7B,GAAwCD,QAAzC,CADlB;AAEA,gDAAqCO,iBAArC,eAA2DC,sBAA3D,yBAAgGC,eAAhG,eAAoHC,oBAApH;AACA;AAtBiC,CAAnC;AAyBA,MAAMC,gBAAgB,GAAG;AACxB,GAACf,aAAD,GAAiB,kCADO;AAExB,GAACC,aAAD,GAAiB,kCAFO;AAGxB,GAACC,WAAD,GAAe,uCAHS;AAIxB,GAACC,UAAD,GAAc;AAJU,CAAzB;;AAOA,SAASa,aAAT,CAAuB;AAAER,EAAAA,aAAF;AAAiBS,EAAAA,KAAjB;AAAwBR,EAAAA,WAAxB;AAAqCC,EAAAA;AAArC,CAAvB,EAA2E;AAC1E,QAAMQ,mBAAmB,GAAGX,0BAA0B,CAACU,KAAD,CAAtD;AAEA,SACC;AAAK,IAAA,SAAS,EAAEF,gBAAgB,CAACE,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,mBAAmB,CAACV,aAAD,EAAgBC,WAAhB,EAA6BC,WAA7B,CADrB,CADD;AAKA;;AAED,eAAeM,aAAf","sourcesContent":["import React from 'react';\n\nimport { PHASE_UNKNOWN, PHASE_RUNNING, PHASE_DRAWN, PHASE_OVER } from '../enums/PHASE.js';\nimport { PLAYER_1, PLAYER_2 } from '../enums/PLAYER.js';\n\nimport cellValueByPlayer from '../mappings/cellValueByPlayer.js';\n\nimport './StatusMessage.css';\n\nconst createStatusMessageByPhase = {\n\t[PHASE_UNKNOWN]: () => 'Please fill out the player names before starting the game.',\n\t[PHASE_RUNNING]: (currentPlayer, playerName1, playerName2) => {\n\t\tconst currentPlayerName = currentPlayer === PLAYER_1 ? playerName1 : playerName2;\n\t\tconst currentPlayerCellValue = cellValueByPlayer[currentPlayer];\n\t\treturn `Game runningâ€¦ it's ${currentPlayerName}'s (${currentPlayerCellValue}) turn to play.`;\n\t},\n\t[PHASE_DRAWN]: (currentPlayer, playerName1, playerName2) => {\n\t\tconst currentPlayerName = currentPlayer === PLAYER_1 ? playerName1 : playerName2;\n\t\tconst currentPlayerCellValue = cellValueByPlayer[currentPlayer];\n\t\tconst otherPlayerName = currentPlayer === PLAYER_1 ? playerName2 : playerName1;\n\t\tconst otherPlayerCellValue =\n\t\t\tcellValueByPlayer[currentPlayer === PLAYER_1 ? PLAYER_2 : PLAYER_1];\n\t\treturn `Game drawn. Nice save ${currentPlayerName} (${currentPlayerCellValue}), nice try ${otherPlayerName} (${otherPlayerCellValue}).`;\n\t},\n\t[PHASE_OVER]: (currentPlayer, playerName1, playerName2) => {\n\t\tconst currentPlayerName = currentPlayer === PLAYER_1 ? playerName1 : playerName2;\n\t\tconst currentPlayerCellValue = cellValueByPlayer[currentPlayer];\n\t\tconst otherPlayerName = currentPlayer === PLAYER_1 ? playerName2 : playerName1;\n\t\tconst otherPlayerCellValue =\n\t\t\tcellValueByPlayer[currentPlayer === PLAYER_1 ? PLAYER_2 : PLAYER_1];\n\t\treturn `Game over. Congratulations ${currentPlayerName} (${currentPlayerCellValue}), nice try ${otherPlayerName} (${otherPlayerCellValue}).`;\n\t}\n};\n\nconst classNameByPhase = {\n\t[PHASE_UNKNOWN]: 'StatusMessage StatusMessage-info',\n\t[PHASE_RUNNING]: 'StatusMessage StatusMessage-info',\n\t[PHASE_DRAWN]: 'StatusMessage StatusMessage-attention',\n\t[PHASE_OVER]: 'StatusMessage StatusMessage-attention'\n};\n\nfunction StatusMessage({ currentPlayer, phase, playerName1, playerName2 }) {\n\tconst createStatusMessage = createStatusMessageByPhase[phase];\n\n\treturn (\n\t\t<div className={classNameByPhase[phase]}>\n\t\t\t{createStatusMessage(currentPlayer, playerName1, playerName2)}\n\t\t</div>\n\t);\n}\n\nexport default StatusMessage;\n"]},"metadata":{},"sourceType":"module"}